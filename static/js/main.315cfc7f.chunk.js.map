{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelect","selectedTab","find","tab","id","className","map","classNames","type","onClick","title","content","App","state","onTabSelected","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"wPAWaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAKO,UAAU,yCAAf,UACE,oBAAIA,UAAU,QAAd,SACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IACT,aACA,CAAE,YAAaJ,IAAQF,IAJ3B,SAOE,wBACEO,KAAK,SACLH,UAAU,SACVI,QAAS,kBAAON,IAAQF,EAAcD,EAAYG,GAAO,MAH3D,SAKE,+BAAOA,EAAIO,WAXRP,EAAIC,SAgBf,mBAAGC,UAAU,cAAb,SACGJ,EAAYU,cCnCfb,EAAc,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAOpCC,E,4MACJC,MAAe,CACbZ,YAAaH,EAAK,I,EAGpBgB,cAAgB,SAACX,GACf,EAAKY,SAAS,CAAEd,YAAaE,K,4CAG/B,WACE,IAAQC,EAAOY,KAAKH,MAAMZ,YAAlBG,GAER,OACE,sBAAKC,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,mCAA0DD,KAC1D,cAAC,EAAD,CACEL,cAAeK,EACfN,KAAMA,EACNE,YAAagB,KAAKF,uB,GAlBVG,aAyBHL,I,MCpCfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.315cfc7f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './Tabs.scss';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelect: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelect,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"tabs is-boxed is-flex-direction-column\">\n      <ul className=\"block\">\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className={classNames(\n              'tabs__item',\n              { 'is-active': tab === selectedTab },\n            )}\n          >\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => (tab !== selectedTab ? onTabSelect(tab) : null)}\n            >\n              <span>{tab.title}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n      <p className=\"tab-content\">\n        {selectedTab.content}\n      </p>\n    </div>\n  );\n};\n","import { Component } from 'react';\n\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  selectedTab: Tab;\n}\n\nclass App extends Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (tab: Tab) => {\n    this.setState({ selectedTab: tab });\n  };\n\n  render() {\n    const { id } = this.state.selectedTab;\n\n    return (\n      <div className=\"App container\">\n        <h1 className=\"Title is-size-2 block\">{`Selected tab is ${id}`}</h1>\n        <Tabs\n          selectedTabId={id}\n          tabs={tabs}\n          onTabSelect={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}